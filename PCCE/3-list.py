# list
# 여러 개의 자료를 하나로 묶어서 표현
# 개별 자료의 종류는 제한이 없고(리스트 안에 리스트, 튜플, 딕셔너리...), 서로 달라도 됨.
# 리스트는 자료의 추가/제거가 자유롭다.

# 리스트의 생성 
x = [] # 비어있는 리스트
y = list() # 비어있는 리스트2
z = [10, 20, 30]
print(f'x = {x}')
print(f'y = {y}')
print(f'z = {z}')

# 리스트에 접근하기(인덱싱)
x = [10, 20, 30, 40, 50]
print(f'x[0] = {x[0]}') # 0부터 시작하는 인덱싱 (첫 번째 값)
print(f'x[2] = {x[2]}') # 0부터 시작하는 인덱싱 (세 번째 값)
print(f'x[-1] = {x[-1]}') # 0부터 시작하는 인덱싱 (끝에서 첫 번째 값)
print(f'x[-2] = {x[-2]}') # 0부터 시작하는 인덱싱 (끝에서 두 번째 값)
x[2] = 999 # 세 번째 값을 999로 변경
print(f'x = {x}')

# 리스트 슬라이싱하기 
x = [10, 20, 30, 40, 50, 60]
print(f'x = {x}')
print(f'x[1:3] = {x[1:3]}') # 1부터 시작해서 3바로 전까지 잘라서 리스트로 출력: 1, 2
print(f'x[:4] = {x[:4]}') # 0부터 시작해서 4바로 전까지 잘라서 리스트로 출력: 0, 1, 2, 3 / 생략하면 0부터 
print(f'x[2:] = {x[2:]}') # 2부터 시작해서 끝까지 잘라서 리스트로 출력: 2, 3, 4, 5 / 뒤를 생략하면 마지막까지 
print(f'x[:] = {x[:]}') # 처음부터 끝까지(!== x[]와 다름)
# 콜론 하나 더 붙으면
print(f'x[1:5:2] = {x[1:5:2]}') # 1~4를 2칸씩 이동해서 자른다. // [20, 40]
print(f'x[::2] = {x[::2]}') # 전체를 (생략) 2칸씩 이동해서 자른다. // [10, 30, 50]
print(f'x[::-1] = {x[::-1]}') # 전체를 (생략) 뒤집어서 1칸씩 이동해서 자른다. 

# BONUS: x와 x[:]는 다름
y = x # y는 x와 같은 리스트를 참조한다.
z = x[:] # 여기서 새로운 리스트가 만들어진다. 
print(f'y = {y}') 
print(f'z = {z}') # 여기까지는 두 값이 같다.
# but, 
x[2] = 999
print(f'y = {y}') # y는 x와 같은 리스트이므로 같이 바뀜(x 수정시 y도 수정됨)
print(f'z = {z}') # z는 x를 '복사해서' 만든 리스트이므로 같이 바뀌지 않음

# 리스트 자료 추가하기 
x = [10, 20, 30]
print(f'x = {x}')
x.append(40) # 리스트의 뒤쪽에 자료 추가 
print(f'x = {x}')

# 리스트 이어붙이기 
x += [1, 2, 3] # 리스트의 뒤쪽에 다른 리스트를 이어 붙임
print(f'x = {x}')
x = [4, 5, 6] + x # 앞쪽에 이어 붙임
print(f'x = {x}')
x = x[:3] + [1000] + x[3:] # 중간에 붙임
print(f'x = {x}')

# 리스트에서 자료 삭제하기 
x = [10, 20, 30, 40, 50, 60, 70]
print(f'x = {x}')
x.remove(30) # 특정 값을 삭제
print(f'x = {x}')
del x[1] # 특정 인덱스에 있는 값을 삭제
print(f'x = {x}')
# x.pop(0) # 특정 인덱스에 있는 값을 삭제
# print(f'x = {x}')
y = x.pop(0) # del은 삭제만 가능하고, pop은 삭제하면서 그 값을 받아줄 수도 있다.
print(f'x = {x}')
print(f'y = {y}')
x[:3] = [] # 40, 50, 60 특정 슬라이스를 제거
print(f'x = {x}')

# BONUS: 같은 값이 여러 개일 경우 자료 삭제
x = [10, 20, 20, 30, 50, 30, 60, 10]
print(f'x = {x}')
x.remove(30)
print(f'x = {x}') # 30 중 맨 앞에 있는 30 하나만 삭제, 같은 값이 여러 개일 경우 그 중 맨 앞에 있는 것이 삭제
# x.remove(90) # 없는 값을 삭제하려 할 경우 오류 발생 

# 그 외 부가 기능들 
x = [40, 10, 60, 80, 30, 5, 10, 10]
print(f'x = {x}')
x.sort() # 리스트 정렬 = 오름차순
print(f'x = {x}') 
#x = x[::-1] # 리스트 정렬 = 내림차순 1
x.sort(reverse=True) # 리스트 정렬 = 내림차순 2
print(f'x = {x}')
x.reverse() # 리스트 정렬 = 순서뒤집기
print(f'x = {x}')

y = x.index(40) # 값이 몇 번째 인덱스에 위치해 있는지 반환(여러 개일 경우 맨 앞에 있는 것)
print(f'y = {y}')

y = x.count(10) # 값이 몇 개 들어있는지 반환 
print(f'y = {y}')

N = len(x) # 리스트의 길이를 반환
print(f'N = {N}')